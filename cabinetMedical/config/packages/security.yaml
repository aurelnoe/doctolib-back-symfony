security:
    encoders:
        App\Entity\User:
            algorithm: auto
            # cost: 12
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # users_in_memory: { memory: null }
        chain_provider:
            chain:
                providers: [app_patient_provider, app_praticien_provider]
        app_patient_provider:
            entity:
                class: App\Entity\Patient
                property: email
        app_praticien_provider:
            entity:
                class: App\Entity\Praticien
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            provider: chain_provider
            pattern: ^/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /login_check
                # username_path: username
                # password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/
            stateless: true
            anonymous: true
            provider: chain_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: lazy
            provider: chain_provider
            # guard:
            #    authenticators:
            #         - App\Security\TokenAuthenticator
            # logout:
            #     path: app_logout  
            #     target: /main

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY } # Allows accessing the Swagger UI
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/patients, roles: IS_AUTHENTICATED_AUTHENTIFIED }
        - { path: ^/adresses, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user, roles: IS_AUTHENTICATED_ANONYMOUSLY }
